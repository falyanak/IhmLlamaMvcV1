// <auto-generated />
using System;
using IhmLlamaMvc.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IhmLlamaMvc.Persistence.Migrations
{
    [DbContext(typeof(ChatIaDbContext))]
    [Migration("20240727113610_updateModeleIA")]
    partial class updateModeleIA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Agents.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LoginWindows")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Conversations.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModeleIAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ModeleIAId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.IaModels.ModeleIA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomModeleApi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlApi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IaModels");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Questions.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Reponses.Reponse", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reponses");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Conversations.Conversation", b =>
                {
                    b.HasOne("IhmLlamaMvc.Domain.Entites.Agents.Agent", "Agent")
                        .WithMany("Conversations")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IhmLlamaMvc.Domain.Entites.IaModels.ModeleIA", "ModeleIA")
                        .WithMany()
                        .HasForeignKey("ModeleIAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("ModeleIA");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Questions.Question", b =>
                {
                    b.HasOne("IhmLlamaMvc.Domain.Entites.Conversations.Conversation", null)
                        .WithMany("Questions")
                        .HasForeignKey("ConversationId");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Reponses.Reponse", b =>
                {
                    b.HasOne("IhmLlamaMvc.Domain.Entites.Questions.Question", "QuestionPosee")
                        .WithOne("Reponse")
                        .HasForeignKey("IhmLlamaMvc.Domain.Entites.Reponses.Reponse", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionPosee");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Agents.Agent", b =>
                {
                    b.Navigation("Conversations");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Conversations.Conversation", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("IhmLlamaMvc.Domain.Entites.Questions.Question", b =>
                {
                    b.Navigation("Reponse")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
